#!/bin/bash

# AILive Automated Debug & Log Collection Script
# Runs entirely on-device using Termux + ADB

set -e

SCRIPT_DIR="$HOME/AILive"
LOG_DIR="$SCRIPT_DIR/logs"
TIMESTAMP=$(date +%Y%m%d_%H%M%S)

mkdir -p "$LOG_DIR"

echo "=========================================="
echo "AILive Debug Session: $TIMESTAMP"
echo "=========================================="
echo ""

# === 1. SYSTEM INFO ===
echo "[1/8] Collecting system info..."
{
    echo "=== DEVICE INFO ==="
    adb shell getprop | grep -E "ro.build|ro.product"
    echo ""
    echo "=== TIMESTAMP ==="
    date
    echo ""
} > "$LOG_DIR/system_info_${TIMESTAMP}.log"

# === 2. APP STATE ===
echo "[2/8] Checking app state..."
{
    echo "=== PROCESS STATUS ==="
    adb shell ps -A | grep com.ailive || echo "AILive not running"
    echo ""
    echo "=== PACKAGE INFO ==="
    adb shell dumpsys package com.ailive | grep -E "versionCode|versionName|userId"
    echo ""
} > "$LOG_DIR/app_state_${TIMESTAMP}.log"

# === 3. CLEAR OLD LOGS ===
echo "[3/8] Clearing old logcat buffer..."
adb logcat -c

# === 4. START APP & CAPTURE LOGS ===
echo "[4/8] Starting AILive and capturing logs..."
adb shell am force-stop com.ailive
sleep 1

# Start logging BEFORE launching app
adb logcat -v threadtime > "$LOG_DIR/full_logcat_${TIMESTAMP}.log" &
LOGCAT_PID=$!

sleep 1
adb shell am start -n com.ailive/.MainActivity

echo "     Waiting 10 seconds for app to initialize..."
sleep 10

# Stop logging
kill $LOGCAT_PID 2>/dev/null || true

# === 5. EXTRACT CRITICAL EVENTS ===
echo "[5/8] Extracting critical events..."
{
    echo "=== ERRORS & WARNINGS ==="
    grep -E "E/|W/" "$LOG_DIR/full_logcat_${TIMESTAMP}.log" | grep -i ailive || echo "No errors/warnings found"
    echo ""
    echo "=== FATAL EXCEPTIONS ==="
    grep -A 30 "FATAL EXCEPTION" "$LOG_DIR/full_logcat_${TIMESTAMP}.log" || echo "No crashes found"
    echo ""
    echo "=== ANRs ==="
    grep -A 20 "ANR in" "$LOG_DIR/full_logcat_${TIMESTAMP}.log" || echo "No ANRs found"
    echo ""
} > "$LOG_DIR/critical_events_${TIMESTAMP}.log"

# === 6. MEMORY SNAPSHOT ===
echo "[6/8] Capturing memory snapshot..."
adb shell dumpsys meminfo com.ailive > "$LOG_DIR/memory_${TIMESTAMP}.log" 2>&1 || echo "Failed to get memory info"

# === 7. PERFORMANCE METRICS ===
echo "[7/8] Capturing performance metrics..."
{
    echo "=== CPU USAGE ==="
    adb shell top -n 1 | head -20
    echo ""
    echo "=== THREADS ==="
    PID=$(adb shell pidof com.ailive 2>/dev/null || echo "")
    if [ -n "$PID" ]; then
        adb shell ps -T -p $PID
    else
        echo "AILive not running"
    fi
    echo ""
} > "$LOG_DIR/performance_${TIMESTAMP}.log"

# === 8. GENERATE REPORT ===
echo "[8/8] Generating debug report..."
cat > "$LOG_DIR/DEBUG_REPORT_${TIMESTAMP}.md" << REPORTEOF
# AILive Debug Report
**Date:** $(date)  
**Session:** ${TIMESTAMP}

## Quick Summary

### App Status
```
$(adb shell ps -A | grep com.ailive || echo "NOT RUNNING")
```

### Critical Events Found
- **Errors:** $(grep -c "E/" "$LOG_DIR/critical_events_${TIMESTAMP}.log" || echo 0)
- **Warnings:** $(grep -c "W/" "$LOG_DIR/critical_events_${TIMESTAMP}.log" || echo 0)
- **Crashes:** $(grep -c "FATAL EXCEPTION" "$LOG_DIR/critical_events_${TIMESTAMP}.log" || echo 0)
- **ANRs:** $(grep -c "ANR in" "$LOG_DIR/critical_events_${TIMESTAMP}.log" || echo 0)

### Memory Usage
```
$(adb shell dumpsys meminfo com.ailive | head -15 || echo "N/A")
```

### AILive-Specific Logs
```
$(grep -E "MainActivity|AILive" "$LOG_DIR/full_logcat_${TIMESTAMP}.log" | head -50 || echo "No AILive logs found!")
```

## Files Generated
- Full logcat: `full_logcat_${TIMESTAMP}.log`
- Critical events: `critical_events_${TIMESTAMP}.log`
- Memory snapshot: `memory_${TIMESTAMP}.log`
- Performance: `performance_${TIMESTAMP}.log`
- System info: `system_info_${TIMESTAMP}.log`
- App state: `app_state_${TIMESTAMP}.log`

## Next Steps
1. Review `critical_events_${TIMESTAMP}.log` for crashes/errors
2. Check `full_logcat_${TIMESTAMP}.log` for AILive-specific messages
3. If no logs appear, verify app is actually starting (check app_state)
4. Look for "MainActivity" or "AILiveCore" messages in full logcat

---
*Generated by AILive Debug Script*
REPORTEOF

# === FINISH ===
echo ""
echo "=========================================="
echo "✓ Debug session complete!"
echo "=========================================="
echo ""
echo "📁 Files saved to: $LOG_DIR/"
echo ""
echo "📊 Quick view:"
cat "$LOG_DIR/DEBUG_REPORT_${TIMESTAMP}.md"
echo ""
echo "🔍 To view full report:"
echo "   cat $LOG_DIR/DEBUG_REPORT_${TIMESTAMP}.md"
echo ""
echo "🔍 To search logs:"
echo "   grep -i 'error' $LOG_DIR/full_logcat_${TIMESTAMP}.log"
echo ""
